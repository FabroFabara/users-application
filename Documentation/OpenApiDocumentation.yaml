openapi: 3.1.0
info:
  title: Users APIs
  description: This APIs allow manage the users register challenge using Spring Boot
  contact:
    name: Users APIs
    email: fabriciofabara@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: User
    description: User operations
paths:
  /user/{id}:
    get:
      tags:
        - User
      summary: Get user by id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      tags:
        - User
      summary: Update user by id
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        '200':
          description: User updated
          content:
            '*/*':
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: User not found
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
        - User
      summary: Delete user by id
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
        '200':
          description: User deleted
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: User not found
          content:
            '*/*':
              schema:
                type: string
  /user:
    get:
      tags:
        - User
      summary: Get all users
      operationId: getAllUsers
      responses:
        '200':
          description: Users found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '204':
          description: No users found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
    post:
      tags:
        - User
      summary: Create a new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        '400':
          description: Bad request
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: User created
          content:
            '*/*':
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    PhoneDto:
      type: object
      properties:
        number:
          type: string
          description: Phone number
          example: '1234567'
        citycode:
          type: string
          description: Phone city code
          example: '1'
        countrycode:
          type: string
          description: Phone country code
          example: '56'
      description: User phones
    UserRequest:
      required:
        - email
        - name
        - password
      type: object
      properties:
        name:
          type: string
          description: User name
          example: John Doe
        email:
          type: string
          description: User email
          example: aaaa@dominio.cl
        password:
          type: string
          description: User password
          format: password
          example: Password123
        phones:
          type: array
          items:
            $ref: '#/components/schemas/PhoneDto'
    UserResponse:
      type: object
      properties:
        id:
          type: string
          description: User id
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: User name
          example: John Doe
        email:
          type: string
          description: User email
          format: email
          example: aaaaa@dominio.cl
        password:
          type: string
          description: User password
          format: password
          example: Password123
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        lastLogin:
          type: string
          format: date-time
        token:
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/PhoneDto'
        active:
          type: boolean
